<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sunrun.mapper.IPDistributionInfoMapper">
    <sql id="IpSegmentLikeQuery">
		AND (

		remark like concat(concat('%',#{like}),'%')
		or
		ip_segment like concat(concat('%',#{like}),'%')
		or address like concat(concat('%',#{like}),'%')
		or network_type like concat(concat('%',#{like}),'%')
		or use_type like concat(concat('%',#{like}),'%')
		or vlan like concat(concat('%',#{like}),'%')
		or gateway like concat(concat('%',#{like}),'%')

		)
	</sql>

    <sql id="IpSegmentExactQuery">
		AND (
		remark = #{exact}
		or ip_segment = #{exact}
		or address = #{exact}
		or network_type = #{exact}
		or use_type = #{exact}
		or vlan = #{exact}
		or gateway = #{exact}
		)
	</sql>

    <sql id="IpLikeQuery">
		AND (
		remark like concat(concat('%',#{like}),'%')
		or
		ip like
		concat(concat('%',#{like}),'%')
		or address like
		concat(concat('%',#{like}),'%')
		or use_type like concat(concat('%',#{like}),'%')
		or system_name like concat(concat('%',#{like}),'%')
		)
	</sql>

    <sql id="IpExactQuery">
		AND (
		remark = #{exact}
		or ip = #{exact}
		or address = #{exact}
		or use_type = #{exact}
		or system_name = #{exact}
		)
	</sql>


    <select id="findAllocationUser" resultType="String">
		select
		concat(usercode,'/',username) from sys_user where state=1 and usercode
		like '0%'

	</select>
    <select id="findDevIpSegmentDistribution" resultType="com.sunrun.entity.DevIpSegmentDistributionBean">
        SELECT
        id,
        concat(ip_segment,'/',subnet_mask) AS ipSegment,
        ip_segment as ip,
        subnet_mask
        AS subnetMask,
        address,
        network_type AS networkType,
        use_type AS useType,
        used_ip AS usedIp,
        all_ip
        AS allIp,
        vlan,gateway,
        remark,
        responsible,
        camp_On as campOn,
        update_user_info AS updateUserInfo,
        create_time AS createTime,
        create_user AS createUser,
        update_time AS
        updateTime,
        update_user AS
        updateUser,
        state
        FROM
        dev_ip_segment_distribution
        WHERE
        state = 1

        <if test="para.id!=null">
            and id = #{para.id}
        </if>


        <if test="like!= null">
            <include refid="IpSegmentLikeQuery"/>
        </if>

        <if test="exact!=null">
            <include refid="IpSegmentExactQuery"/>
        </if>

        <if test="sortBy!=null">
            order by ${sortBy}
        </if>
        <if test="sortBy==null">
            ORDER BY update_time desc,inet_aton(ip_segment)
        </if>
        <if test="order!=null">
            ${order}
        </if>
        <if test="order==null">
            asc
        </if>
        <if test="limit!=null">
            limit ${limit}
        </if>

    </select>


    <select id="countDevIpSegmentDistribution" resultType="java.lang.Integer">
        select count(*) from dev_ip_segment_distribution where state=1

        <if test="para.id!=null">
            and id = #{para.id}
        </if>

        <if test="para.ipSegment!=null">
            and ip_segment = #{para.ipSegment}
        </if>


        <if test="like!= null">
            <include refid="IpSegmentLikeQuery"/>
        </if>

        <if test="exact!=null">
            <include refid="IpSegmentExactQuery"/>
        </if>
    </select>


    <select id="findDevIpSegmentConfigBean" resultType="com.sunrun.entity.DevIpSegmentConfigBean">
        SELECT
        network_type as networkType
        FROM
        dev_ip_segment_config
        WHERE
        state = 1

        <if test="para.id!=null">
            and id = #{para.id}
        </if>
        <if test="para.networkType!=null">
            and network_type = #{para.networkType}
        </if>




    </select>


    <select id="findDevIpDistribution" resultType="com.sunrun.entity.DevIpDistributionBean">
        SELECT
        id,
        address AS address,
        ip AS ip,
        ip_segment AS ipSegment,
        network_type AS networkType,
        use_type AS useType,
        vlan AS vlan,
        subnet_mask AS subnetMask,
        gateway AS gateway,
        remark AS remark,
        responsible AS responsible,
        update_user_info AS
        updateUserInfo,
        CASE is_Use
        WHEN 1 THEN '使用'
        WHEN 0 THEN '未使用'
        else '未知'
        END AS
        isUse,
        create_time AS createTime,
        create_user AS createUser,
        update_time AS updateTime,
        update_user AS updateUser,
        ip_Type AS ipType,
        system_name as systemName
        FROM
        dev_ip_distribution
        WHERE
        state = 1
        <if test="para.id!=null">
            and id = #{para.id}
        </if>
        <if test="para.ip!=null">
            and ip = #{para.ip}
        </if>
        <if test="para.networkType!=null">
            and network_type = #{para.networkType}
        </if>


        <if test="like!= null">
            <include refid="IpLikeQuery"/>
        </if>

        <if test="exact!=null">
            <include refid="IpExactQuery"/>
        </if>

        <if test="sortBy!=null">
            order by ${sortBy}
        </if>
        <if test="sortBy==null">
            ORDER BY update_time desc, inet_aton(ip_segment) asc, is_Use desc ,
            inet_aton(ip )
        </if>
        <if test="order!=null">
            ${order}
        </if>
        <if test="order==null">
            asc
        </if>
        <if test="limit!=null">
            limit ${limit}
        </if>

    </select>

    <select id="countDevIpDistribution" resultType="java.lang.Integer">
        select count(*) from dev_ip_distribution where state=1

        <if test="para.id!=null">
            and id = #{para.id}
        </if>
        <if test="para.ip!=null">
            and ip = #{para.ip}
        </if>
        <if test="para.ipSegment!=null">
            and ip_segment = #{para.ipSegment}
        </if>
        <if test="para.operationType!=null and ( para.operationType=='delete'.toString() or para.operationType=='update'.toString() ) ">
            and responsible!=null
        </if>
        <if test="para.isUseInteger!=null">
            and is_use = ${para.isUseInteger}
        </if>

        <if test="para.networkType!=null">
            and network_type = #{para.networkType}
        </if>

        <if test="like!= null">
            <include refid="IpLikeQuery"/>
        </if>

        <if test="exact!=null">
            <include refid="IpExactQuery"/>
        </if>

    </select>


    <insert id="saveIpSegmentDistribution">

        insert into dev_ip_segment_distribution(
        id ,
        ip_segment ,
        subnet_mask ,
        address ,
        network_type ,
        use_type ,
        used_ip ,
        all_ip ,
        vlan,gateway,camp_on,operation_type,
        remark ,
        responsible ,
        update_user_info ,
        create_time ,
        create_user ,
        update_time ,
        update_user ,
        state
        ) values
        <foreach collection="para" item="para" index="index"
                 separator=",">
            (
            #{para.id},
            #{para.ipSegment},
            #{para.subnetMask},
            #{para.address},
            #{para.networkType},
            #{para.useType},
            #{para.usedIp},
            #{para.allIp},
            #{para.vlan},#{para.gateway},#{para.campOn},#{para.operationTypeInteger},
            #{para.remark},
            #{para.responsible},
            #{para.updateUserInfo},
            now(),
            #{para.create_user},
            now(),
            #{para.update_user},
            1
            )
        </foreach>
    </insert>

    <insert id="saveDevIpDistribution">

        insert into dev_ip_distribution(
        id ,
        address ,
        ip ,
        ip_segment ,
        network_type ,
        use_type ,
        vlan ,
        subnet_mask ,
        gateway ,
        remark ,
        responsible ,
        update_user_info ,
        is_use ,
        operation_type,
        system_name,
        create_time ,
        create_user ,
        update_time ,
        update_user ,
        state,ip_type
        ) values
        <foreach collection="para" item="para" index="index"
                 separator=",">
            (
            <if test='para.newId!=null '>
                #{para.newId},
            </if>
            <if test="para.newId==null">
                #{para.id},
            </if>
            #{para.address},
            #{para.ip},
            #{para.ipSegment},
            #{para.networkType},
            #{para.useType},

            #{para.vlan},
            #{para.subnetMask},
            #{para.gateway},

            #{para.remark},
            #{para.responsible},

            #{para.updateUserInfo},
            #{para.isUseInteger},
            #{para.operationTypeInteger},
            #{para.systemName},
            now(),
            #{para.create_user},
            now(),
            #{para.update_user},
            1,#{para.ipType}
            )
        </foreach>
    </insert>

    <update id="editIpSegmentDistribution">

        <foreach collection="para" item="para" index="index">

            update dev_ip_distribution
            set state=0
            where state=1 and ip_segment= #{para.ipSegment};

            update
            dev_ip_segment_distribution
            set state=0
            where state=1 and  ip_segment= #{para.ipSegment};


        </foreach>

    </update>

    <update id="editIpDistribution">
            update dev_ip_distribution
            set state=0
            where state=1 and id in
            <foreach collection="set" item="para" index="index" open="("
                     close=")" separator=",">
                #{para}
            </foreach>
            ;

    </update>

    <update id="updateIpSegmentDistribution">
            update dev_ip_segment_distribution
            set used_ip= (select
            count(*) from dev_ip_distribution where state=1 and is_use=1
            and
            ip_segment=#{ipSegment})
            where
            state=1  and
            ip_Segment=#{ipSegment} ;
    </update>


    <delete id="deleteIpSegmentDistribution">
		update dev_ip_distribution  set operation_type=3,state=0 ,update_user_info=#{para.updateUserInfo} ,update_user=#{para.update_user},update_time=now() where state=1 and ip_Segment= #{para.ipSegment};
		update dev_ip_segment_distribution set  operation_type=3, state=0 ,update_user_info=#{para.updateUserInfo},update_user= #{para.update_user},update_time=now()  where state=1 and  id=
		#{para.id};
	</delete>


    <select id="findUserRole" resultType="Integer">
		SELECT count(*) FROM
		sys_role
		WHERE
		state=1 and name =#{name}
		and id IN (SELECT DISTINCT
		role_id
		FROM
		sys_user_role
		WHERE
		user_id IN (SELECT
		id
		FROM
		sys_user
		WHERE
		id =
		#{userId}))
	</select>

    <select id="findMenu" resultType="com.sunrun.entity.MenuBean">

        SELECT
        m.id as functionsId,
        m.module_id as modeId,
        m.url as
        functionsModeNumber,
        m.name as title,
        m.url_param_1 as
        functionsTableName
        FROM sys_menu m
        where state=1
        <if test="para.functionsModeNumber!=null">
            and m.url=#{para.functionsModeNumber}
        </if>

    </select>


    <select id="find_ipSegment_distribution_historyDataInfo"
            resultType="com.sunrun.entity.DevIpSegmentDistributionBean">
        SELECT
        id,
        concat(ip_segment,'/',subnet_mask) AS ipSegment,
        ip_segment as ip,
        subnet_mask
        AS subnetMask,
        address,
        network_type AS networkType,
        use_type AS useType,
        used_ip AS usedIp,
        all_ip
        AS allIp,
        vlan,gateway,
        remark,
        responsible,
        update_user_info AS updateUserInfo,
        create_time AS createTime,
        create_user AS createUser,
        update_time AS
        updateTime,
        update_user AS
        updateUser,
        CASE operation_type
        WHEN 1 THEN '新增'
        WHEN 2 THEN '修改'
        WHEN 3 THEN '删除'
        else   '未知操作'
        END AS
        operationType,
        state
        FROM
        dev_ip_segment_distribution

        <if test='para.ipSegment!=null '>
            WHERE      ip_segment=#{para.ipSegment}
        </if>

            ORDER BY update_time desc


    </select>


    <select id="find_ip_distribution_historyDataInfo" resultType="com.sunrun.entity.DevIpDistributionBean">
        SELECT
        id,
        address AS address,
        ip AS ip,
        ip_segment AS ipSegment,
        network_type AS networkType,
        use_type AS useType,
        vlan AS vlan,
        subnet_mask AS subnetMask,
        gateway AS gateway,
        remark AS remark,
        responsible AS responsible,
         CASE operation_type
        WHEN 1 THEN '新增'
        WHEN 2 THEN '修改'
        WHEN 3 THEN '删除'
        else   '未知操作'
        END AS
        operationType,
        system_name as  systemName ,
        update_user_info AS
        updateUserInfo,
        CASE is_Use
        WHEN 1 THEN '使用'
        WHEN 0 THEN '未使用'
        END AS
        isUse,
        create_time AS createTime,
        create_user AS createUser,
        update_time
        AS updateTime,
        update_user AS updateUser
        FROM
        dev_ip_distribution

        <if test='para.ip!=null '>
            WHERE      ip=#{para.ip}
        </if>

        ORDER BY update_time desc

    </select>


</mapper>