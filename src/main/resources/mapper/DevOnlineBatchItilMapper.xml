<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sunrun.mapper.DevOnlineBatchItilMapper">

	<insert id="saveDevOnlineBatch">
		insert into dev_online_batch_itil(
			id,				batch_name,				batch_describe,			batch_state,		 create_time,	      	state,
			itil_number,	itil_assignee,			itil_category,			itil_subcategory,	itil_businessArea,		itil_status,
			itil_requestor, itil_title,				itil_description,		itil_plannedEnd,	 create_user
		) values(
			#{itil.id},		#{itil.batchName},		#{itil.batchDescribe},		1, 					now(),				 1,
			#{itil.itilNumber},#{itil.itilAssignee},#{itil.itilCategory},	#{itil.itilSubcategory},#{itil.itilBusinessArea},#{itil.itilStatus},
			#{itil.itilRequestor},#{itil.itilTitle},#{itil.itilDescription},#{itil.itilPlannedEnd},#{itil.create_user}
		)
	</insert>
	
	<update id="updateDevOnlineBatch">
		update dev_online_batch_itil
			<trim prefix="set" suffixOverrides=",">
				update_time = now(),
				<if test="itil.batchName != null">batch_name=#{itil.batchName},</if>
				<if test="itil.batchDescribe != null">batch_describe=#{itil.batchName},</if>
				<if test="itil.batchState != null">batch_state=#{itil.batchState},</if>
				<if test="itil.state != null">state=#{itil.state},</if>
				<if test="itil.itilStatus != null">itil_status=#{itil.itilStatus},</if>
				<if test="itil.update_user != null">update_user=#{itil.update_user},</if>
				
			</trim>
		where 1=1
		<if test="itil.id != null">
		    AND id = #{itil.id}
		</if>
		<if test="itil.id != null">
		    AND itil_number = #{itil.itilNumber}
		</if>
	</update>
	
	<delete id="deleteDevOnlineBatch">
		delete from dev_online_batch_itil
		where 1=1
		<if test="id != null">
		    AND id = #{id}
		</if>
	</delete>

	<select id="findBatchById" resultType="com.sunrun.entity.DevOnlineBatchItil">
		select 
			 id AS id,
			 batch_name AS batchName,
			 batch_describe AS batchDescribe,
			 batch_state AS batchState,
			 itil_number AS itilNumber,
			 itil_assignee AS itilAssignee,
			 itil_category AS itilCategory,
			 itil_subcategory AS itilSubcategory,
			 itil_businessArea As itilBusinessArea,
			 itil_status AS itilStatus,
			 itil_requestor AS itilRequestor,
			 itil_title AS itilTitle,
			 itil_description AS itilDescription,
			 itil_plannedEnd AS itilPlannedEnd
		from dev_online_batch_itil
		where id = #{id}
	</select>
	
	<select id="findItilStatus" resultType="com.sunrun.entity.DevOnlineBatchItil">
		select 
			 id AS id,
			 itil_number AS itilNumber,
			 itil_status AS itilStatus,
			 itil_requestor AS itilRequestor,
			 itil_title AS itilTitle,
			 itil_description AS itilDescription,
			 itil_plannedEnd AS itilPlannedEnd
		from dev_online_batch_itil 
		where 1=1 and itil_status like '%审核%' or itil_status like '%审批%' or  itil_status like '%登记%'
	</select>

	<select id="findItilTask" resultType="com.sunrun.entity.view.DevOnlineBatchTaskView">
		SELECT * from(
			SELECT 
				b.batch_name AS batchName,
				b.batch_describe AS batchDescribe,
				b.batch_state AS batchState,
				b.itil_number AS itilNumber,
				b.itil_assignee AS itilAssignee,
				b.itil_category AS itilCategory,
				b.itil_subcategory AS itilSubcategory,
				b.itil_businessArea As itilBusinessArea,
				b.itil_status AS itilStatus,
				b.itil_requestor AS itilRequestor,
				b.itil_title AS itilTitle,
				b.itil_description AS itilDescription,
				b.itil_plannedEnd AS itilPlannedEnd,
			
				t.id AS id,
				t.task_type AS taskType,
				t.group_key AS groupKey,
				t.task_describe AS taskDescribe,
				t.task_state AS taskState,
				t.brand_name AS brandName,
				t.model_name AS modelName,
				t.area_name AS areaName,
				t.area_describe AS areaDescribe,
				t.host_name AS hostName,
				t.manager_ip AS managerIp,
				t.vlan AS vlan,
				t.main_switchboard_ip AS mainSwitchboardIp,
				t.main_switchboard_port AS mainSwitchboardPort,
				t.backup_switchboard_ip AS backupSwitchboardIp,
				t.backup_switchboard_port AS backupSwitchboardPort,
				t.dev_online_rack AS devOnlineRack,
				t.exclusive_switchboard_ip AS exclusiveSwitchboardIp,
				t.exclusive_switchboard_port AS exclusiveSwitchboardPort,
				t.create_time AS createTime, 
				t.update_time AS updateTime,
				t.username AS createUser,
				t.manager_ip_write AS managerIpWrite,
				t.access_config_write AS accessConfigWrite,
				t.exclusive_switchboard_info AS exclusiveSwitchboardInfo,
				t.current_ios_version AS currentIosVersion, 
				t.main_switchboard_config_write AS mainSwitchboardConfigWrite,
				t.model_ios_version AS modelIosVersion,
				t.access_version_write AS accessVersionWrite,
				t.switch_state AS switchState,
				t.backup_switchboard_config_write AS backupSwitchboardConfigWrite,
				t.access_switchboard_check AS accessSwitchboardCheck,
				13 AS taskAllStep,
				t.email_id AS emailId,
				(SELECT Max(execute_step) FROM dev_task_execute WHERE task_id=t.id) AS executeStep,
				(SELECT Max(execute_step) FROM dev_task_execute WHERE task_id=t.id) AS taskCurrentStep,
				(SELECT task_describe FROM dev_task_execute where task_id=t.id AND execute_step = executeStep and update_time is null
				 and create_time = (SELECT max(create_time) from dev_task_execute where task_id=t.id AND execute_step = executeStep)) AS taskCurrentStepDescribe
				
			FROM  dev_online_task t 
				LEFT JOIN  dev_online_task_itil ti ON ti.dev_online_task_id=t.id
				LEFT JOIN dev_online_batch_itil b on b.itil_number = ti.itil_number
				LEFT JOIN sys_send_email e ON e.id = t.email_id
			WHERE t.state=1  
			
		) taskView	where 1=1 
		<if test="taskView.id!=null">
		    AND id = #{taskView.id}
		</if>
		<if test="taskView.executeStep!=null">
		    AND executeStep = #{taskView.executeStep}
		</if>
		<if test="taskView.switchState!=null">
		    AND switchState = #{taskView.switchState}
		</if>
		<if test="taskView.batchState!=null and (taskView.batchState==1 or taskView.batchState==2) ">
		    AND (batchState = 1 or batchState = 2)
		</if>
		<if test="taskView.batchState!=null and taskView.batchState==3">
		    AND batchState = 3
		</if>
		<if test="taskView.itilNumber!=null">
		    AND itilNumber = #{taskView.itilNumber}
		</if>
		<if test="like!= null">
			<include refid="taskLikeQuery" />
		</if>
		<if test="sortBy!=null">
				order by ${sortBy}
		</if>
		<if test="sortBy==null">
				order by createTime
		</if>
		<if test="order!=null">
				${order}
		</if>
		<if test="order==null">
				desc
		</if>
		<if test="limit!=null">
				limit ${limit}
		</if>
	</select>
	
	<select id="countItilTask" resultType="java.lang.Integer">
		SELECT count(*) from(
			SELECT 
				b.batch_name AS batchName,
				b.batch_describe AS batchDescribe,
				b.batch_state AS batchState,
				b.itil_number AS itilNumber,
				b.itil_assignee AS itilAssignee,
				b.itil_category AS itilCategory,
				b.itil_subcategory AS itilSubcategory,
				b.itil_businessArea As itilBusinessArea,
				b.itil_status AS itilStatus,
				b.itil_requestor AS itilRequestor,
				b.itil_title AS itilTitle,
				b.itil_description AS itilDescription,
				b.itil_plannedEnd AS itilPlannedEnd,
			
				t.id AS id,
				t.task_type AS taskType,
				t.group_key AS groupKey,
				t.task_describe AS taskDescribe,
				t.task_state AS taskState,
				t.brand_name AS brandName,
				t.model_name AS modelName,
				t.area_name AS areaName,
				t.area_describe AS areaDescribe,
				t.host_name AS hostName,
				t.manager_ip AS managerIp,
				t.vlan AS vlan,
				t.main_switchboard_ip AS mainSwitchboardIp,
				t.main_switchboard_port AS mainSwitchboardPort,
				t.backup_switchboard_ip AS backupSwitchboardIp,
				t.backup_switchboard_port AS backupSwitchboardPort,
				t.dev_online_rack AS devOnlineRack,
				t.exclusive_switchboard_ip AS exclusiveSwitchboardIp,
				t.exclusive_switchboard_port AS exclusiveSwitchboardPort,
				t.create_time AS createTime,
				t.update_time AS updateTime,
				t.username AS createUser,
				t.manager_ip_write AS managerIpWrite,
				t.access_config_write AS accessConfigWrite,
				t.exclusive_switchboard_info AS exclusiveSwitchboardInfo,
				t.current_ios_version AS currentIosVersion, 
				t.main_switchboard_config_write AS mainSwitchboardConfigWrite,
				t.model_ios_version AS modelIosVersion,
				t.access_version_write AS accessVersionWrite,
				t.switch_state AS switchState,
				t.backup_switchboard_config_write AS backupSwitchboardConfigWrite,
				t.backup_switchboard_config_write AS backupSwitchboardConfigWrite,
				13 AS taskAllStep,
				t.email_id AS emailId,
				(SELECT Max(execute_step) FROM dev_task_execute WHERE task_id=t.id) AS executeStep,
				(SELECT Max(execute_step) FROM dev_task_execute WHERE task_id=t.id) AS taskCurrentStep,
				(SELECT task_describe FROM dev_task_execute where task_id=t.id AND execute_step = executeStep and update_time is null
				 and create_time = (SELECT max(create_time) from dev_task_execute where task_id=t.id AND execute_step = executeStep)) AS taskCurrentStepDescribe
				
			FROM  dev_online_task t 
				LEFT JOIN  dev_online_task_itil ti ON ti.dev_online_task_id=t.id
				LEFT JOIN dev_online_batch_itil b on b.itil_number = ti.itil_number
				LEFT JOIN sys_send_email e ON e.id = t.email_id
			WHERE t.state=1   
		) taskView	where 1=1 
		<if test="taskView.id!=null">
		    AND id = #{taskView.id}
		</if>
		<if test="taskView.executeStep!=null">
		    AND executeStep = #{taskView.executeStep}
		</if>
		<if test="taskView.switchState!=null">
		    AND switchState = #{taskView.switchState}
		</if>
		<if test="taskView.batchState!=null and (taskView.batchState==1 or taskView.batchState==2) ">
		    AND (batchState = 1 or batchState = 2)
		</if>
		<if test="taskView.batchState!=null and taskView.batchState==3">
		    AND batchState = 3
		</if>
		<if test="taskView.itilNumber!=null">
		    AND itilNumber = #{taskView.itilNumber}
		</if>
		<if test="like!= null">
			<include refid="taskLikeQuery" />
		</if>
		<if test="sortBy!=null">
				order by ${sortBy}
		</if>
		<if test="order!=null">
				${order}
		</if>
		<if test="limit!=null">
				limit ${limit}
		</if>
	</select>
	
	<sql id="taskLikeQuery">
		AND (
			    taskView.batchName like concat(concat('%',#{like}),'%') 
			    or taskView.batchDescribe like concat(concat('%',#{like}),'%') 
			    or taskView.batchState like binary  concat(concat('%',#{like}),'%') 
			    or taskView.itilNumber like concat(concat('%',#{like}),'%') 
				or taskView.itilAssignee like concat(concat('%',#{like}),'%') 
				or taskView.itilCategory like concat(concat('%',#{like}),'%') 
				or taskView.itilSubcategory like concat(concat('%',#{like}),'%') 
				or taskView.itilBusinessArea like concat(concat('%',#{like}),'%') 
				or taskView.itilStatus like binary concat(concat('%',#{like}),'%') 
				or taskView.itilRequestor like concat(concat('%',#{like}),'%') 
				or taskView.itilTitle like concat(concat('%',#{like}),'%') 
				or taskView.itilDescription like concat(concat('%',#{like}),'%') 
				or taskView.itilPlannedEnd like binary  concat(concat('%',#{like}),'%') 
			    or taskView.taskType like binary concat(concat('%',#{like}),'%') 
			    or taskView.groupKey like concat(concat('%',#{like}),'%') 
			    or taskView.taskDescribe like concat(concat('%',#{like}),'%') 
			    or taskView.taskState like binary concat(concat('%',#{like}),'%') 
			    or taskView.brandName like concat(concat('%',#{like}),'%') 
			    or taskView.modelName like concat(concat('%',#{like}),'%') 
			    or taskView.areaName like concat(concat('%',#{like}),'%') 
			    or taskView.areaDescribe like concat(concat('%',#{like}),'%') 
			    or taskView.hostName like concat(concat('%',#{like}),'%') 
			    or taskView.managerIp like concat(concat('%',#{like}),'%') 
			    or taskView.vlan like concat(concat('%',#{like}),'%') 
			    or taskView.mainSwitchboardIp like concat(concat('%',#{like}),'%') 
			    or taskView.mainSwitchboardPort like concat(concat('%',#{like}),'%') 
			    or taskView.backupSwitchboardIp like concat(concat('%',#{like}),'%') 
			    or taskView.backupSwitchboardPort like concat(concat('%',#{like}),'%') 
			    or taskView.exclusiveSwitchboardIp like concat(concat('%',#{like}),'%') 
			    or taskView.exclusiveSwitchboardPort like concat(concat('%',#{like}),'%') 
			    or taskView.devOnlineRack like concat(concat('%',#{like}),'%') 
			    or taskView.managerIpWrite like concat(concat('%',#{like}),'%') 
			    or taskView.accessConfigWrite like concat(concat('%',#{like}),'%') 
			    or taskView.exclusiveSwitchboardInfo like concat(concat('%',#{like}),'%') 
			    or taskView.currentIosVersion like concat(concat('%',#{like}),'%') 
			    or taskView.mainSwitchboardConfigWrite like concat(concat('%',#{like}),'%') 
			    or taskView.modelIosVersion like concat(concat('%',#{like}),'%') 
			    or taskView.accessVersionWrite like binary concat(concat('%',#{like}),'%') 
			    or taskView.switchState like binary concat(concat('%',#{like}),'%') 
			    or taskView.backupSwitchboardConfigWrite like binary concat(concat('%',#{like}),'%') 
		    )
	</sql>

</mapper>